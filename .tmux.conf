set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_show_sync_mode 'on'

# Use vi keys.
set -gw mode-keys vi

# True color support.
set -g default-terminal "screen-256color"
set -ga terminal-overrides ',xterm-256color:Tc'

# Undercurl support.
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' # underscore colours - needs tmux-3.0

# So you don't end up with window numbers like: 0 1 4 5 6.
set -g renumber-windows on

# Disallow renaming a window.
set -g allow-rename off

# Enable mouse support (note that there can be UTF8 mouse problem with ROXterm).
set -g mouse on

# Auto update SSH_TTY envvar.
set -ag update-environment "SSH_TTY"

# Visual notification of activity in other windows.
setw -g monitor-activity off
set -g visual-activity off

# Unbind "release mouse click to copy selection & exit copy-mode" behavior.
unbind -T copy-mode-vi MouseDragEnd1Pane

# Rename shortcuts.
bind , command-prompt -p "(rename-window '#W')" "rename-window '%%'"
bind '$' command-prompt -p "(rename-session '#S')" "rename-session '%%'"

# Smart pane switching with awareness of Neovim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-Left' if-shell "$is_vim" 'send-keys C-Left' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-Down' if-shell "$is_vim" 'send-keys C-Down' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-Up' if-shell "$is_vim" 'send-keys C-Up' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-Right' if-shell "$is_vim" 'send-keys C-Right' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-Left' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-Down' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-Up' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-Right' if -F '#{pane_at_right}' '' 'select-pane -R'

# Use `<prefix> [` to enter copy-mode
bind [ copy-mode
unbind C-[
bind ] paste-buffer
bind p paste-buffer

# Use 'v' to begin selection in copy mode, similar entering visual mode in Vim.
bind -T edit-mode-vi Up   send -X history-up
bind -T edit-mode-vi Down send -X history-down
bind -T copy-mode-vi v    send -X begin-selection
unbind -T copy-mode-vi C-v ; bind -T copy-mode-vi C-v send -X rectangle-toggle
unbind -T copy-mode-vi [   ; bind -T copy-mode-vi [   send -X begin-selection
unbind -T copy-mode-vi ]   ; bind -T copy-mode-vi ]   send -X copy-selection

# URL search.
bind u copy-mode \; send -X search-backward "(https?://|git@|git://|ssh://|ftp://|file:///)[[:alnum:]?=%/_.:,;~@!#$&()*+-]*"

# Middle-click paste.
bind-key -n MouseDown2Pane run "tmux load-buffer <(xclip -o); tmux paste-buffer"
# Prefix-V pastes from the "Ctrl-C" clipboard.
bind-key v run "tmux load-buffer <(xclip -o -sel clipboard); tmux paste-buffer"

# Open new pane in same directory.
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Do not reset scroll position on mouse select.
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Custom remaps.
bind l send 'C-l'
bind k next-window
bind j previous-window
bind Tab choose-window

# Swap/reorder windows.
bind C-j swap-window -t -1\; select-window -t -1
bind C-k swap-window -t +1\; select-window -t +1

# Quick swap between two last windows.
bind b last-window

# Layout configuration.
bind M-1 select-layout even-horizontal
bind M-2 select-layout even-vertical
bind M-3 select-layout main-horizontal
bind M-4 select-layout main-vertical
bind M-5 select-layout tiled

# Source additional configs under ~/.tmux.d directory.
if '[ -f ~/.tmux/themes/delay.conf ]' 'source ~/.tmux/themes/delay.conf'

# List of plugins.
set -g @tpm_plugins '                \
  tmux-plugins/tpm                   \
  tmux-plugins/tmux-prefix-highlight \
  tmux-plugins/tmux-sensible         \
  tmux-plugins/tmux-yank             \
'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf).
run '~/.tmux/plugins/tpm/tpm'
