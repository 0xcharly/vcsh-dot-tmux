# True color support.
set -ga terminal-overrides ',xterm-256color:Tc'

# Undercurl support.
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' # underscore colours - needs tmux-3.0

# No need for the status bar.
set -g status-justify left
set -g status-left-length 50
set -g status-left ""
set -g status-right "#[fg=black,bg=blue] #S #[fg=default,bg=default]"
set -g status-style "bg=#282c34 fg=default"
set -g window-status-separator "  "
set -g window-status-format "#[fg=black,bg=#7f848e] #I #[fg=#7f848e,dim,bg=default] #W"
set -g window-status-current-format "#[fg=black,bg=blue] #I #[fg=default,bg=default] #W"

# Sync terminal window titels with tmux sessions name.
set-option -g set-titles on
set-option -g set-titles-string "#S"

# Prefix.
set -sg escape-time 0

# So you don't end up with window numbers like: 0 1 4 5 6.
set -g renumber-windows on

# Disallow renaming a window.
set -g allow-rename off

# Enable mouse support.
set -g mouse on

# Auto update SSH_TTY envvar.
set -ag update-environment "SSH_TTY"

# Visual notification of activity in other windows.
setw -g monitor-activity off
set -g visual-activity off

# Unbind "release mouse click to copy selection & exit copy-mode" behavior.
unbind -T copy-mode-vi MouseDragEnd1Pane

# Rename shortcuts.
bind , command-prompt -p "(rename-window '#W')" "rename-window '%%'"
bind '$' command-prompt -p "(rename-session '#S')" "rename-session '%%'"

# Use vi keys.
set -gw mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection

set -g set-clipboard off
unbind -T copy-mode-vi y
unbind-key -T copy-mode-vi MouseDragEnd1Pane
unbind-key -n MouseDown2Pane
unbind-key v

if "test `uname` = 'Linux'" "set -g copy-command 'xclip -i -sel primary'"
# DO NOT UNCOMMENT: avoid accidentally copying sensitive content to the system
# clipboard on macOS.
# if "test `uname` = 'Darwin'" "set -g copy-command 'pbcopy'"

# 'copy-mode-vi y' copies to clipboard buffer.
if "test `uname` = 'Linux'" "bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -i -sel clipboard'"
if "test `uname` = 'Darwin'" "bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'pbcopy'"

# Copy on mouse select copies to primary clipboard on Linux only (because macOS
# doesn't have a concept of primary/clipboard selection, and every app has
# access to the content of the clipboard).
# Do not reset scroll position on mouse select ('copy-pipe' instead of
# 'copy-pipe-and-cancel').
if "test `uname` = 'Linux'" "bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-no-clear 'xclip -i -sel primary'"

# Middle-click pastes from the primary clipboard on Linux, system clipboard on
# macOS (for convenience).
if "test `uname` = 'Linux'" "bind-key -n MouseDown2Pane run 'tmux load-buffer -b primary_selection <(xclip -o -sel primary); tmux paste-buffer -b primary_selection'"
if "test `uname` = 'Darwin'" "bind-key -n MouseDown2Pane run 'tmux load-buffer -b clipboard_selection <(pbpaste); tmux paste-buffer -b clipboard_selection'"

# Prefix-v pastes from the primary clipboard, system clipboard on macOS (for
# convenience).
if "test `uname` = 'Linux'" "bind-key v run 'tmux load-buffer -b primary_selection <(xclip -o -sel primary); tmux paste-buffer -b primary_selection'"
if "test `uname` = 'Darwin'" "bind-key v run 'tmux load-buffer -b clipboard_selection <(pbpaste); tmux paste-buffer -b clipboard_selection'"

# vim-like pane switching
bind C-b last-window

# URL search.
bind u copy-mode \; send -X search-backward '(https?://|git@|git://|ssh://|ftp://|file:///|cl/|b/)[[:alnum:]?=%/_.:,;~@!#$&()*+-]*'

# Open new pane in same directory.
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Custom remaps.
bind l send 'C-l'

# Navigate windows.
bind k next-window
bind j previous-window
bind -r C-k next-window
bind -r C-j previous-window
bind Tab choose-window

# Swap/reorder windows.
bind -r J swap-window -t -1 \; select-window -t -1
bind -r K swap-window -t +1 \; select-window -t +1

# Go to windows.
bind -r h select-window -t 0
bind -r t select-window -t 1
bind -r n select-window -t 2
bind -r s select-window -t 3
bind -r C-h select-window -t 0
bind -r C-t select-window -t 1
bind -r C-n select-window -t 2
bind -r C-s select-window -t 3

bind r source-file ~/.config/tmux/tmux.conf
bind C-r source-file ~/.config/tmux/tmux.conf

# forget the find window.  That is for chumps
bind f run-shell "tmux new-window ~/.local/bin/open-tmux-workspace"
