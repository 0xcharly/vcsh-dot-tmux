# True color support.
set -ga terminal-overrides ',xterm-256color:Tc'

# Undercurl support.
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' # underscore colours - needs tmux-3.0

set -g status-justify centre
set -g status-left " #[fg=blue]#S#[fg=default]"
set -g status-right "#[fg=blue]%l:%M %p#[fg=default] "
set -g status-style "bg=default fg=default"
set -g window-status-format "#[fg=#7f848e,dim] #I  #W#[fg=default]"
set -g window-status-current-format "#[fg=black,bg=blue] #I #[fg=default,bg=default] #W"

# Prefix.
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
set -s escape-time 0

# So you don't end up with window numbers like: 0 1 4 5 6.
set -g renumber-windows on

# Disallow renaming a window.
set -g allow-rename off

# Enable mouse support.
set -g mouse on

# Auto update SSH_TTY envvar.
set -ag update-environment "SSH_TTY"

# Visual notification of activity in other windows.
setw -g monitor-activity off
set -g visual-activity off

# Unbind "release mouse click to copy selection & exit copy-mode" behavior.
unbind -T copy-mode-vi MouseDragEnd1Pane

# Rename shortcuts.
bind , command-prompt -p "(rename-window '#W')" "rename-window '%%'"
bind '$' command-prompt -p "(rename-session '#S')" "rename-session '%%'"

# Use vi keys.
set -gw mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection

if "test `uname` = 'Linux'" "bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"
if "test `uname` = 'Darwin'" "bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy'"
# Middle-click paste.
if "test `uname` = 'Linux'" "bind-key -n MouseDown2Pane run 'tmux load-buffer <(xclip -o); tmux paste-buffer'"
if "test `uname` = 'Darwin'" "bind-key -n MouseDown2Pane run 'tmux load-buffer (pbpaste); tmux paste-buffer'"
# Prefix-V pastes from the "Ctrl-C" clipboard.
if "test `uname` = 'Linux'" "bind-key v run 'tmux load-buffer <(xclip -o -sel clipboard); tmux paste-buffer'"
if "test `uname` = 'Darwin'" "bind-key v run 'tmux load-buffer (pbpaste); tmux paste-buffer'"

# vim-like pane switching
bind -r ^ last-window
bind -r C-a last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

# URL search.
bind u copy-mode \; send -X search-backward '(https?://|git@|git://|ssh://|ftp://|file:///)[[:alnum:]?=%/_.:,;~@!#$&()*+-]*'

# Open new pane in same directory.
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Do not reset scroll position on mouse select.
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Custom remaps.
bind l send 'C-l'
bind k next-window
bind j previous-window
bind Tab choose-window

# Swap/reorder windows.
bind C-j swap-window -t -1\; select-window -t -1
bind C-k swap-window -t +1\; select-window -t +1


# forget the find window.  That is for chumps
bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"

bind-key -r i run-shell "tmux neww tmux-cht.sh"
bind-key -r G run-shell "~/.local/bin/tmux-sessionizer ~/work/nrdp"
bind-key -r C run-shell "~/.local/bin/tmux-sessionizer ~/work/tvui"
bind-key -r R run-shell "~/.local/bin/tmux-sessionizer ~/work/milo"
# bind-key -r L run-shell "~/.local/bin/tmux-sessionizer ~/work/hpack"
bind-key -r H run-shell "~/.local/bin/tmux-sessionizer ~/personal/qmk/users-delay"
bind-key -r T run-shell "~/.local/bin/tmux-sessionizer ~/personal/refactoring.nvim"
bind-key -r N run-shell "~/.local/bin/tmux-sessionizer ~/personal/harpoon"
bind-key -r S run-shell "~/.local/bin/tmux-sessionizer ~/personal/developer-productivity"
